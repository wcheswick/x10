#!/bin/sh
#
prog=sendmorse
usage="$prog ["message"] x10addr"
#
#	Generate shell x10 commands on stdout ato send a given signal in Morse code through
#	and X10 device. Message may appear on stdin or as the first parameter.

fn=
msg=
case $# in
1)	fn=/dev/stdin
	dev="$1";;
2)	msg="$1"
	dev="$2";;
*)	echo "usage" 1>&2
	exit 1
esac

TMP=/tmp/$prog

cat <<!EOF >$TMP
a	.-
b	-...
c	-.-.
d	-..
e	.
f	..-.
g	--.
h	....
i	..
j	.---
k	-.-
l	.-..
m	--
n	-.
o	---
p	.--.
q	--.-
r	.-.
s	...
t	-
u	..-
v	...-
w	.--
x	-..-
y	-.--
z	--..
1	.----
2	..---
3	...--
4	....-
5	.....
6	-....
7	--...
8	---..
9	----.
0	-----
!EOF

#	dot is one unit
#	dash is three units
#	one unit between dots and dashes in same letter
#	three units between letters
#	seven units between words

case "$fn" in
"")	echo "$msg";;
*)	cat "$fn"
esac |
tr ' ' '\n'		|
tr '[A-Z]' '[a-z]'	|
grep -v '^$'		|
awk -v morsefn=$TMP -vdev="$dev" '

function sleepfor(u) {
	asleep = u
}

function cmd(c) {
	if (asleep) {
		print "sleep " asleep*unit
		asleep = 0;
	}
	print "x10 " c " " dev		
}

BEGIN {	while ((getline <morsefn) > 0)
		code[$1] = tolower($2)

	errs = 0
	unit = 1
	betweenwords = 0
	asleep = 0
}

{	if (betweenwords) {
		sleepfor(7)		# between words
		betweenwords = 0
	}
	for (i=1; i<= length($1); i++) {
		ch = substr($1, i, 1)
		if (!(ch in code)) {
			errs++
			continue
		}
		co = code[ch]
		print "#         " ch ": " co
		for (j=1; j<= length(co); j++) {
			d = substr(co, j, 1)
			if (d == ".") {
				cmd("on")
				sleepfor(1)
			} else if (d == "-") {
				cmd("on")
				sleepfor(3)
			} else {
				errs++
				continue
			}
			cmd("off")
			sleepfor(1)	# between same letter
		}
		sleepfor(3)		# between letters
	}
	betweenwords = 1
}

END {	if (errs)
		print errs " Morse errors" >"/dev/stderr"
}'
